local mod = get_mod("Geheimnisnacht for all")

-- Created by Janoti 2022-10-30
-- Thanks to the former Author Craven for the mod from last year and his Code
-- Thanks to Actual Trash for helping me deciding positions and testing the mod


-- load Geheimnisnacht as Global (Not possible to load as local as the gamemode differs)
local package_name = "resource_packages/dlcs/geheimnisnacht_2021_event"
local async = true
local prioritize = false
Managers.package:load(package_name, "global", nil, async, prioritize)

-- spawns with the ring technically adjustable no need tho
--[[
local spawn_lists = {
	skaven = {
		"skaven_plague_monk",
		"skaven_clan_rat",
		"skaven_plague_monk",
		"skaven_clan_rat",
		"skaven_plague_monk",
		"skaven_clan_rat"
	},
	chaos = {
		"chaos_marauder",
		"chaos_marauder",
		"chaos_marauder",
		"chaos_marauder",
		"chaos_marauder"
	}
}
local spawn_categories = table.keys(spawn_lists)
]]

local event_settings = {
	--test
	whitebox = { -- default spawn check
		ritual_locations = {
			{
				0,
				0,
				0,
				0
			}
		}
	},
	prologue = { --prologue
	ritual_locations = {
			{
				53.97,
				-29.81,
				-13.92,
				0
			}
		}
	},
	--helmgart
	military = { -- Rightous Stand
	ritual_locations = {
			{
				91,
				147,
				-19.5,
				90
			}
		}
	},
	catacombs = { --convocation of decay
		ritual_locations = {
			{
				178.8,
				109,
				32,
				50
			}
		}
	},
	mines = { -- Hunger in the Dark
		ritual_locations = {
			{
				-76.08,
				130,
				22.75,
				5
			}
		}
	},
	ground_zero = { -- halescourge
		ritual_locations = {
			{
				-171.5,
				102.7,
				42.094002,
				20
			}
		}
	},
	elven_ruins = { --athel yenlui
		ritual_locations = {
			{
				37.891605,
				-109,
				19.562,
				0
			}
		}
	},
	bell = { -- screaming bell
	ritual_locations = {
			{
				-62.059746,
				-178.81282,
				-34.657001,
				0
			}
		}
	},
	fort = { -- fort brachsenbr√ºcke
	ritual_locations = {
			{
				52.39,
				306.66,
				-21.86,
				0
			}
		}
	},
	skaven_stronghold = { --into the nest
	ritual_locations = {
			{
				-85.65,
				-20.70,
				57.04,
				0
			}
		}
	},
	skittergate = { --skittergate
	ritual_locations = {
			{
				-216.85,
				-446.45,
				-67.74,
				0
			}
		}
	},
	farmlands = { --against the grain
		ritual_locations = {
			{
				223.965363,
				-253.689133,
				7.712,
				0
			}
		}
	},
	ussingen = { -- Empire in Flames
	ritual_locations = {
			{
				-4.573383,
				-160.917343,
				1.135474,
				0
			}
		}
	},
    nurgle = { -- festering ground (fs coorfinates)
		ritual_locations = {
			{
				175.1,
				-114.5,
				2.5,
				0
			}
		}
	},
    warcamp = { --warcamp (fs coorfinates)
		ritual_locations = {
			{
				-151.1,
				-20,
				19.15,
				0
			}
		}
	},
	--V1
    cemetery = { --garden of morr
		ritual_locations = {
			{
				23.04,
				-72.83,
				9.83,
				0
			}
		}
	},
    forest_ambush = { --Engines of War
		ritual_locations = {
			{
				32.61,
				-84.91,
				-3.37,
				0
			}
		}
	},
	magnus = { --horn of magnus
	ritual_locations = {
			{
				-185.71,
				77.74,
				4.79,
				0
			}
		}
	},
	plaza = { --FOW
	ritual_locations = {
			{
				51.48,
				28.90,
				3,06,
				0
			}
		}
	},
	--bogenhafen
	dlc_bogenhafen_city = { --blightreaper
		ritual_locations = {
			{
				59.76,
				78.29,
				-2.56,
				0
			}
		}
	},
    dlc_bogenhafen_slum = { --the pit
		ritual_locations = {
			{
				-125.07,
				-222.29,
				-2.64,
				0
			}
		}
	},
	--lair
    dlc_bastion = { --blood in darkness
    ritual_locations = {
            {
				109.6,
				56.7,
				-52.8,
				0
            }
        }
    },
    dlc_castle = { --Enchanters lair (fs coorfinates)
    ritual_locations = {
            {
				5.584873,
				65.619408,
				0,
				-40
            }
        }
    },
    dlc_portals = { --old haunts
    ritual_locations = {
            {
				-178.758,
				224.85,
				-45.733,
				0
            }
        }
    },
	--cata
    crater = { --dark omens
    ritual_locations = {
			{
				115.57,
				-443.43,
				29.3,
				0
			}
		}
	},
	--Trail
	dlc_wizards_trail = { --trails of treachery
		ritual_locations = {
			{
				190.79,
				-14.60,
				407.12,
				0
			}
		}
	},
	dlc_wizards_tower = { --tower of treachery (fs coorfinates)
		ritual_locations = {
			{
				4.45,
				36.4,
				77.01,
				0
			}
		}
	},
	--Karak
	dlc_dwarf_interior = { --mercy
		ritual_locations = {
			{
				85.077263,
				37.885601,
				17.038277,
				0
			} 
		}
	},
	dlc_dwarf_exterior = { --grudge
		ritual_locations = {
			{
				-206.591476,
				-128.560135,
				-5.001165,
				0
			}
		}
	},
	dlc_dwarf_beacons = { --kaizaki (fs coorfinates)
		ritual_locations = {
			{
				-128.2,
				-102.8,
				-15.3,
				0
			}
		}
	 },
	--bonus
	dlc_celebrate_crawl = { --a quiet drink
		ritual_locations = {
			{
				-38.53,
				-160.55,
				-25.39,
				0
			}
		}
	},
}

local hard_mode_mutators = {
	"geheimnisnacht_2021_hard_mode"
}

local function side_objective_picked_up()
	-- print warning message to team
	-- local pop_chat = true
	-- local message = Localize("system_chat_geheimnisnacht_2021_hard_mode_on")
	-- Managers.chat:add_local_system_message(1, message, pop_chat)

	-- add mutator
	local mutator_handler = Managers.state.game_mode._mutator_handler
	mutator_handler:initialize_mutators(hard_mode_mutators)

	for i = 1, #hard_mode_mutators, 1 do
		mutator_handler:activate_mutator(hard_mode_mutators[i])
	end
end
local function side_objective_picked_dropped()
	-- print loss message to team
	-- local pop_chat = true
	-- local message = Localize("system_chat_geheimnisnacht_2021_hard_mode_off")
	-- Managers.chat:add_local_system_message(1, message, pop_chat)

	-- remove mutator
	local mutator_handler = Managers.state.game_mode._mutator_handler
	for i = 1, #hard_mode_mutators, 1 do
		local mutator_name = hard_mode_mutators[i]
		local mutator_active = mutator_handler:has_activated_mutator(mutator_name)

		if mutator_active then
			mutator_handler:deactivate_mutator(mutator_name)
		end
	end
end


-- looks like all returns of various mutator files end up in this one global called MutatorTemplates
MutatorTemplates["geheimnisnacht_2021"]["server_start_function"] = function(context, data)
    	local level_key = Managers.state.game_mode:level_key()
		local settings = event_settings[level_key]

		if settings then
			local ritual_locations = settings.ritual_locations
			local up = Vector3.up()

			for i = 1, #ritual_locations, 1 do
				local location = ritual_locations[i]
				local pos = Vector3(location[1], location[2], location[3])
				local rot = Quaternion.axis_angle(up, math.rad(location[4]))

				data.template.spawn_ritual_ring(pos, rot)
			end

			local inventory_system = Managers.state.entity:system("inventory_system")

			inventory_system:register_event_objective("wpn_geheimnisnacht_2021_side_objective", side_objective_picked_up, side_objective_picked_dropped)
		else 
		local level_key = Managers.state.game_mode:level_key()
		if string.find(level_key, "inn_level") or string.find(level_key, "morris_hub") then 
			return
		end

      local loaded = PackageManager:has_loaded("resource_packages/dlcs/geheimnisnacht_2021_event", geheimnisnacht_2021)
      if not loaded then
        mod:echo("[Geheimnisnacht+]: Loading package: %s", resource_packages/dlcs/geheimnisnacht_2021_event)
      end

    local inventory_system = Managers.state.entity:system("inventory_system")
	inventory_system:register_event_objective("wpn_geheimnisnacht_2021_side_objective", side_objective_picked_up, side_objective_picked_dropped)

    end
end

mod.on_game_state_changed = function(status, state)
    if status == "enter" and state == "StateIngame" and mod:is_enabled() then
        local mutator_handler = Managers.state.game_mode._mutator_handler

        if not mutator_handler:has_activated_mutator("geheimnisnacht_2021") then
			mod:echo("[Geheimnisnacht+]: Activating %s", Localize("display_name_mutator_geheimnisnacht_2021"))
				if mod:get("geheimnisnacht_2021") then
					mod:echo("[Geheimnisnacht+]: Activating %s", Localize("display_name_mutator_geheimnisnacht_2021"))
					mutator_handler:activate_mutator("geheimnisnacht_2021")
				end
				if mod:get("geheimnisnacht_2023") then
					mod:echo("[Geheimnisnacht+]: Activating %s", Localize("display_name_mutator_geheimnisnacht_2021"))
					mutator_handler:activate_mutator("geheimnisnacht_2021")
				end
        end

        if not mutator_handler:has_activated_mutator("night_mode") then
			mod:echo("[Geheimnisnacht+]: Activating %s", Localize("display_name_mutator_night_mode"))
			if mod:get("night_mode") then
				mod:echo("[Geheimnisnacht+]: Activating %s", Localize("display_name_mutator_night_mode"))
				mutator_handler:activate_mutator("night_mode")
			end
        end

    end
end



-- Mutator 2021 and 2022

-- https://www.reddit.com/r/Vermintide/comments/qhy3ys/quick_fyi_about_geheimnisnacht_events_buff_on/
-- 125% more health (225% in total)
-- deal 25% more damage (125% in total)
-- have 90% more mass
-- stagger resistance increase by 10%

local function geheimnisnacht_2021()
	-- Instant Spawn of Chaos warrior when breaking the Ritual remove
	GenericTerrorEvents.geheimnisnacht_2021_event = {
		{
			"set_master_event_running",
			name = "geheimnisnacht_2021_event"
		},
		{
			"one_of",
			{
				{
					"inject_event",
					event_name_list = {
						"geheimnisnacht_2021_event_faction_skaven"
					},
					faction_requirement_list = {
						"skaven"
					}
				},
				{
					"inject_event",
					event_name_list = {
						"geheimnisnacht_2021_event_faction_chaos"
					},
					faction_requirement_list = {
						"chaos"
					}
				},
				{
					"inject_event",
					event_name_list = {
						"geheimnisnacht_2021_event_faction_beastmen"
					},
					faction_requirement_list = {
						"beastmen"
					}
				}
			}
		}
	}
	-- chance to get a chaos warrior with a grudge mark removed
	MutatorTemplates["geheimnisnacht_2021_hard_mode"]["possible_grudge_marks"] = {}
	MutatorTemplates["geheimnisnacht_2021_hard_mode"]["post_ai_spawned_function"] = function (mutator_context, mutator_data, breed, optional_data)
		local breed_name = breed.name
		-- local grudge_data = mod.possible_grudge_marks [breed_name]
		-- if grudge_data then
		-- 	local state_by_breed = mutator_data.grudge_mark_state_by_breed or { }
		-- 	mutator_data.grudge_mark_state_by_breed = state_by_breed
	
		-- 	local success = nil
		-- 	local chance = optional_data.spawn_chance or grudge_data.chance
		-- 	local breed_state = state_by_breed [breed_name]
		-- 	success, breed_state = PseudoRandomDistribution.flip_coin(breed_state, chance)
		-- 	state_by_breed [breed_name] = breed_state
	
		-- 	if success then
		-- 		local names = grudge_data.names
		-- 		local grudge_mark_name = names [math.random(1, #names)]
	
		-- 		local list = optional_data.enhancements or { }
		-- 		local base_grudgemark_name = grudge_data.base_grudgemark_name
		-- 		if base_grudgemark_name then
		-- 			list [#list + 1] = BreedEnhancements [base_grudgemark_name]
		-- 		end
		-- 		list [#list + 1] = BreedEnhancements [grudge_mark_name]
	
		-- 		optional_data.enhancements = list
		-- 	end
		-- end
	end
end



-- Mutator 2023 (added cw with grudge mark)

-- https://www.reddit.com/r/Vermintide/comments/17h0l0l/quick_fyi_about_2023_geheimnisnacht_events_buff/
-- The Chosen of Blosphoros Chaos Warrior is a guaranteed spawn after disrupting the ritual.
-- And when you carrying the skull, there is a 15% chance any Chaos Warrior spawned as one.
-- They have 425% health, dealing 45% more damage(145% in total) and its knockback distance is reduced by 70%.
-- If they carry Replusive grudge mark, all their attacks will send small enemies and player flying within 4.5 units.
-- If they carry Nurgle's Rotten Resilience as grudge mark, all other enemy units within 4 units cannot be killed.
-- https://github.com/thewhitegoatcb/Vermintide-2-Source-Code/blob/60a2d29f171e92f2eac117c733a8c3eb91032881/scripts/settings/mutators/mutator_geheimnisnacht_2021_hard_mode.lua

local function geheimnisnacht_2023()
	GenericTerrorEvents.geheimnisnacht_2021_event = {
		{
			"set_master_event_running",
			name = "geheimnisnacht_2021_event"
		},
		{
			"spawn",
			{
				1,
				1
			},
			breed_name = "chaos_warrior",
			pre_spawn_func = setup_altar_chaos_warrior,
			optional_data = {
				spawn_chance = 1,
				spawned_func = AiUtils.magic_entrance_optional_spawned_func,
				prepare_func = size_chaos_warrior
			}
		},
		"one_of",
		{
			{
				"inject_event",
				event_name_list = {
					"geheimnisnacht_2021_event_faction_skaven"
				},
				faction_requirement_list = {
					"skaven"
				}
			},
			{
				"inject_event",
				event_name_list = {
					"geheimnisnacht_2021_event_faction_chaos"
				},
				faction_requirement_list = {
					"chaos"
				}
			},
			{
				"inject_event",
				event_name_list = {
					"geheimnisnacht_2021_event_faction_beastmen"
				},
				faction_requirement_list = {
					"beastmen"
				}
			}
		}
	}
end


-- Change Eye Color of Enemies

-- create mutator for it
-- functions to change eye color
-- create buff containing just the eye color change
local function merge(dst, src)
    for k, v in pairs(src) do
        dst[k] = v
    end
    return dst
end
function mod.add_buff_template(self, buff_name, buff_data, extra_data)
    local new_buff = {
        buffs = {
            merge({ name = buff_name }, buff_data),
        },
    }
    if extra_data then
        new_buff = merge(new_buff, extra_data)
    end
    BuffTemplates[buff_name] = new_buff
    local index = #NetworkLookup.buff_templates + 1
    NetworkLookup.buff_templates[index] = buff_name
    NetworkLookup.buff_templates[buff_name] = index
end
mod:add_buff_template("geheimnisnacht_eye_glow", {
	buffs = {
		remove_buff_func = "geheimnisnacht_2021_remove_eye_glow",
		name = "geheimnisnacht_eye_glow",
		apply_buff_func = "geheimnisnacht_2021_apply_eye_glow"
	}
})
local function enable_eye_glow()
	local mutator_eyes = {
		name = "geheimnisnacht_eye_glow_mutator"
	}
	DLCSettings.geheimnisnacht_2021.BuffFunctionTemplates = {
		geheimnisnacht_2021_apply_eye_glow = function (unit, buff, params)
			local buff_ext = ScriptUnit.has_extension(unit, "buff_system")
			if not ALIVE [unit] then return
			end
			if not buff_ext.reset_material_cache then
				buff_ext.reset_material_cache = Unit.get_material_resource_id(unit, "mtr_eyes")
			end

			Unit.set_material(unit, "mtr_eyes", "units/beings/enemies/mtr_eyes_geheimnisnacht")
		end,
		geheimnisnacht_2021_remove_eye_glow = function (unit, buff, params)
			local buff_ext = ScriptUnit.has_extension(unit, "buff_system")
			if not ALIVE [unit] or not buff_ext.reset_material_cache then return
			end
			Unit.set_material_from_id(unit, "mtr_eyes", buff_ext.reset_material_cache)
		end
	}
	function mutator_eyes.server_start_function(context, data)
		local hero_side = Managers.state.side:get_side_from_name("heroes")
		local spawned_enemies = hero_side:enemy_units()
		local num_enemies = #spawned_enemies
		local buff_system = Managers.state.entity:system("buff_system")
		data.enemies_to_be_buffed = { }
		for i = 1, num_enemies do
			local unit = spawned_enemies [i]
			if ALIVE [unit] then
				local buff_ext = ScriptUnit.has_extension(unit, "buff_system")
				if buff_ext then
					local has_buff = buff_ext:get_buff_type("geheimnisnacht_eye_glow")
					if buff_system and not has_buff then
						buff_system:add_buff(unit, "geheimnisnacht_eye_glow", unit)
					end
				end
			end
		end
	end
	-- for k in pairs(MutatorTemplates) do
	-- 	table.insert(mutator_eyes, k)
	-- end
	merge(MutatorTemplates, mutator_eyes)
end
enable_eye_glow()




mod.on_settings_changed = function()
	if mod:get("change_eye_color") then
		MutatorHandler:activate_mutator("geheimnisnacht_eye_glow_mutator")
	else
		MutatorHandler:deactivate_mutator("geheimnisnacht_eye_glow_mutator")
	end
	if mod:get("geheimnisnacht_2021") then
		mod:get("geheimnisnacht_2021") = false
		geheimnisnacht_2021()
	elseif mod:get("geheimnisnacht_2023") then
		mod:get("geheimnisnacht_2023") = false
		geheimnisnacht_2023()
	end
end





mod:echo("Geheimnisnacht+ v1.3 enabled")


-- TODO
-- DONE -- change locations of new maps too the fatshark locations
-- add skulls for the skull throne (skull event mutator)
-- make toggle to switch between the twoo different variations of geheimnisnacht events
-- add icon?
-- add eye color buff to game somehow
-- DONE -- two notes for skull in chat? - remove one


-- NOTES
-- 5.2 https://github.com/thewhitegoatcb/Vermintide-2-Source-Code/blob/60a2d29f171e92f2eac117c733a8c3eb91032881/scripts/settings/mutators/mutator_geheimnisnacht_2021.lua#L132

-- Fatsharks Event Coordinates:
-- 2021: Old Haunts, Screaming Bell, Enchanter's Lair, Empire in Flames, Righteous Stand
-- 2022: Athel Yenlui, Hunger in the Dark, Halescourge, Against the Grain, Convocation of Decay
-- 2023: Festering Ground (the cave), Khazukan Kazakit-ha!, War Camp, Tower of Treachery, Blood in the Darkness